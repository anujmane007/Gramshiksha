// Firestore Security Rules for LearnSphere App
// Copy and paste these rules into your Firebase Console > Firestore Database > Rules

rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to get user role
    function getUserRole() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role;
    }
    
    // Helper function to check if user is a teacher
    function isTeacher() {
      return isAuthenticated() && getUserRole() == 'teacher';
    }
    
    // Helper function to check if user is a student
    function isStudent() {
      return isAuthenticated() && getUserRole() == 'student';
    }
    
    // Users can read/write their own user document
    match /users/{userId} {
      allow read, write: if isAuthenticated() && request.auth.uid == userId;
    }
    
    // Students can read/write their own student document
    match /students/{userId} {
      allow read, write: if isAuthenticated() && request.auth.uid == userId;
      allow read: if isTeacher(); // Teachers can read student data
    }
    
    // Teachers can read/write their own teacher document
    match /teachers/{userId} {
      allow read, write: if isAuthenticated() && request.auth.uid == userId;
    }
    
    // Courses - all authenticated users can read, teachers can write
    match /courses/{courseId} {
      allow read: if isAuthenticated();
      allow write: if isTeacher();
    }
    
    // Quizzes - all authenticated users can read, teachers can write
    match /quizzes/{quizId} {
      allow read: if isAuthenticated();
      allow write: if isTeacher();
    }
    
    // Quiz questions - students can read, teachers can write
    match /quiz_questions/{questionId} {
      allow read: if isAuthenticated();
      allow write: if isTeacher();
    }
    
    // Quiz results - students can write their own results, teachers can read all
    match /quiz_results/{resultId} {
      allow read: if isAuthenticated();
      allow write: if isStudent();
    }
    
    // Assignments - all can read, teachers can write
    match /assignments/{assignmentId} {
      allow read: if isAuthenticated();
      allow write: if isTeacher();
    }
    
    // Assignment submissions - students can write their own, teachers can read all
    match /assignment_submissions/{submissionId} {
      allow read: if isAuthenticated();
      allow write: if isStudent();
    }
    
    // Announcements - all can read, teachers can write
    match /announcements/{announcementId} {
      allow read: if isAuthenticated();
      allow write: if isTeacher();
    }
    
    // Classes - all can read, teachers can write
    match /classes/{classId} {
      allow read: if isAuthenticated();
      allow write: if isTeacher();
    }
    
    // Course materials - all can read, teachers can write
    match /course_materials/{materialId} {
      allow read: if isAuthenticated();
      allow write: if isTeacher();
    }
    
    // Course progress - students can read/write their own progress
    match /course_progress/{progressId} {
      allow read, write: if isAuthenticated() && 
        progressId.matches('^' + request.auth.uid + '_.*');
      allow read: if isTeacher(); // Teachers can read all progress
    }
    
    // Attendance - all can read, teachers can write
    match /attendance/{attendanceId} {
      allow read: if isAuthenticated();
      allow write: if isTeacher();
    }
    
    // Notifications - users can read their own notifications
    match /notifications/{notificationId} {
      allow read, write: if isAuthenticated();
    }
  }
}

// Storage Security Rules (if using Firebase Storage)
// Go to Firebase Console > Storage > Rules and paste this:
/*
rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // Allow authenticated users to upload course materials
    match /course_materials/{allPaths=**} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        firestore.get(/databases/(default)/documents/users/$(request.auth.uid)).data.role == 'teacher';
    }
    
    // Allow users to upload profile pictures
    match /profile_pictures/{userId}/{allPaths=**} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Allow students to upload assignment files
    match /assignments/{assignmentId}/{userId}/{allPaths=**} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      allow read: if request.auth != null && 
        firestore.get(/databases/(default)/documents/users/$(request.auth.uid)).data.role == 'teacher';
    }
  }
}
*/